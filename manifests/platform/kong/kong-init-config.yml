apiVersion: v1
kind: ConfigMap
metadata:
  name: kong-init-config
  namespace: koli-system
data:
  nginx-koli-template.conf: |2

    worker_processes ${{NGINX_WORKER_PROCESSES}}; # can be set by kong.conf
    daemon ${{NGINX_DAEMON}};                     # can be set by kong.conf

    pid pids/nginx.pid;                      # this setting is mandatory
    error_log logs/error.log ${{LOG_LEVEL}}; # can be set by kong.conf

    events {
        worker_connections 16384;
        multi_accept on;
    }

    http {
        include 'nginx-kong.conf';

        upstream kubernetes {
            server kubernetes.default:443 fail_timeout=0s max_fails=0;
        }

        # In the future this component will be deprecated, upstream to an insecure port
        upstream k8smutator {
            server k8smutator.koli-system:80 fail_timeout=0s max_fails=0;
        }

        server {
            listen 6000;
            listen 6443 ssl;
            proxy_read_timeout 300;

            ssl_certificate /usr/local/kong/ssl/kong-default.crt;
            ssl_certificate_key /usr/local/kong/ssl/kong-default.key;
            ssl_protocols TLSv1.1 TLSv1.2;

            ssl_session_cache shared:SSL:10m;
            ssl_session_timeout 10m;
            ssl_prefer_server_ciphers on;
            ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256;


            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Headers "Authorization,Accept,Accept-Version,Content-Type" always;
            add_header Access-Control-Allow-Methods "GET,POST,PUT,PATCH,DELETE,OPTIONS" always;

            location ~ /api/v1/namespaces/[a-z0-9]([-a-z0-9]*[a-z0-9])?$ {
                if ($request_method ~ (OPTIONS)){
                  return 204;
                }
                proxy_set_header X-Request-Id $request_id;
                if ($request_method ~ (PUT|PATCH|GET)){
                    proxy_pass http://k8smutator;
                    break;
                }
                proxy_pass https://kubernetes;
            }

            location ~ /api/v1/namespaces$ {
                if ($request_method ~ (OPTIONS)){
                  return 204;
                }
                proxy_set_header X-Request-Id $request_id;
                if ($request_method ~ (POST|GET)){
                    proxy_pass http://k8smutator;
                    break;
                }
                proxy_pass https://kubernetes;
            }

            location ~ /apis/extensions/v1beta1/namespaces/[a-z0-9]([-a-z0-9]*[a-z0-9])?/deployments {
                if ($request_method ~ (OPTIONS)){
                  return 204;
                }
                proxy_set_header X-Request-Id $request_id;
                if ($request_method ~ (POST|PUT|PATCH)) {
                    proxy_pass http://k8smutator;
                    break;
                }
                proxy_pass https://kubernetes;
            }


            location ~ /apis/extensions/v1beta1/namespaces/[a-z0-9]([-a-z0-9]*[a-z0-9])?/ingresses {
                 if ($request_method ~ (OPTIONS)){
                   return 204;
                 }
                 proxy_set_header X-Request-Id $request_id;
                 if ($request_method ~ (POST|PUT|PATCH|DELETE)) {
                     proxy_pass http://k8smutator;
                     break;
                 }
                 proxy_pass https://kubernetes;
            }

            location ~ /apis/platform.koli.io/v1/namespaces/[a-z0-9]([-a-z0-9]*[a-z0-9])?/domains {
                if ($request_method ~ (OPTIONS)){
                  return 204;
                }
                proxy_set_header X-Request-Id $request_id;
                if ($request_method ~ (POST|PUT|PATCH|DELETE)){
                    proxy_pass http://k8smutator;
                    break;
                }
                proxy_pass https://kubernetes;
            }

            location ~ /apis/platform.koli.io/v1/domains/[a-z0-9]([-a-z0-9\.]*[a-z0-9])?$ {
                if ($request_method ~ (OPTIONS)){
                  return 204;
                }
                proxy_set_header X-Request-Id $request_id;
                if ($request_method ~ HEAD){
                    proxy_pass http://k8smutator;
                    break;
                }
                proxy_pass https://kubernetes;
            }

            location ~ / {
                if ($request_method ~ (OPTIONS)){
                  return 204;
                }

                proxy_pass https://kubernetes;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "Upgrade";
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Original-URI $request_uri;
                proxy_set_header X-Request-Id $request_id;
                proxy_buffering off;
            }
        }
    }
